const calculadora = {
    display: document.querySelector("#display"),
    btns: document.querySelectorAll("button"),
    expression: [],
    opers: ["*", "/", "+", "-", "%"],
    numberInsert: true,
    operInsert: false,

    keyDown(){

        document.onkeydown = e => {

            if( Number(e.key) || 
                e.key == 0 ||
                e.key == "." ||
                e.key == ","
            ) this.readyNum(e.key);

            if(this.opers.includes(e.key)) this.readyOper(e.key)

            if(e.key == "Delete") this.display.value = 0;
            if(e.key == "Backspace") this.clear();
        }
    },

    click() {

        this.btns.forEach(btn => {
            
            btn.onclick = e => {
                
                if(btn.dataset.value) this.readyNum(btn.dataset.value);
                if(btn.dataset.oper) this.readyOper(btn.dataset.oper);
                if(btn.classList.contains("del")) this.display.value = 0;
                if(btn.classList.contains("backs")) this.clear();
            }
        });
    },

    readyNum (n){
        // LÃª numeros e ponto decimal
        // garantinso que o ponto decimal seja
        // usado apenas 1 vez

        if(n == ",") n = ".";

        if(this.display.value != 0) {

            if(
                (this.isFloat() && n != ".") || 
                !this.isFloat()
            ) {
                this.display.value += n;
                this.expression.push(n);
            }
        }

        else {

            if(this.isFloat() && n != ".") {
                this.display.value += n
                this.expression.push(n);
            } 
            if(!this.isFloat())  {
                if(n == ".") this.display.value += n
                else this.display.value = n
                this.expression.push(n);
            }
        }

    },

    readyOper (o) {
        if(this.opers.includes(o)) {

        }
    },

    isFloat() {
        return this.display.value.includes(".") ? true : false;
    },

    hasOper() {
        this.opers.map(oper => {

        });
        return this.display.value.includes()
    },

    calc(){
        this.display = eval(this.expression)
    },

    clear() {
        this.display.value.length == 1 ?
        this.display.value = 0 :
        this.display.value = this.display.value.slice(0, this.display.value.length-1); 
    },
}

calculadora.keyDown();
calculadora.click();


// const terms = new Array;
// const operators = new Array;


// for(const btn of btns) {
//     const KeyValue  = btn.innerHTML;
    
//     btn.onclick = e => {
//         if(Number(KeyValue)) readyNum(KeyValue);
//         

//         if(btn.className.includes("oper")){
//             terms.push(this.display.value)
//             this.display.value = 0;
//             operators.push(KeyValue);
//         }

//         if(btn.className == "res"){
//             terms.push(this.display.value);

//             for(const term of terms) {
//                 this.display.value = ""
//             }
//         }
//     }
// }

